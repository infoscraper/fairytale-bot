"""Start handler for the bot"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from ..keyboards.inline import get_children_keyboard, get_profile_management_keyboard, get_main_menu_keyboard
from ..states.story_states import StoryCreationStates
from ...services.child_service import ChildService
from ...models.user import User

router = Router()


@router.message(Command("start"))
async def start_handler(
    message: Message,
    session: AsyncSession,
    current_user: User
):
    """Handle /start command"""
    
    user_name = current_user.first_name
    user_stats = f"(ID: {current_user.id}, –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞–∑–æ–∫: {3 - current_user.free_stories_used}/3)"
    
    welcome_text = (
        f"üé≠ –ü—Ä–∏–≤–µ—Ç, {user_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Å–∫–∞–∑–æ–∫!\n\n"
        "–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∫–∞–∑–æ—á–Ω–∏–∫! ‚ú®\n\n"
        "üìö –ß—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∫–∞–∑–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞\n"
        "‚Ä¢ –î–µ–ª–∞—Ç—å –µ–≥–æ –≥–ª–∞–≤–Ω—ã–º –≥–µ—Ä–æ–µ–º –∫–∞–∂–¥–æ–π –∏—Å—Ç–æ—Ä–∏–∏\n"
        "‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∞–∑–∫–∏ –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã\n"
        "‚Ä¢ –ó–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ—Ä–∏–∏\n\n"
        f"üë§ {user_stats}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    keyboard = get_main_menu_keyboard()
    await message.answer(welcome_text, reply_markup=keyboard)


@router.message(Command("help"))
async def help_handler(message: Message):
    """Handle /help command"""
    
    help_text = (
        "üÜò –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É\n\n"
        "üìñ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–∫–∞–∑–∫—É:\n"
        "1. –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /story\n"
        "2. –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞\n"
        "3. –í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π\n"
        "4. –ñ–¥–∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞! ‚ú®\n\n"
        "üí° –°–æ–≤–µ—Ç—ã:\n"
        "‚Ä¢ –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –ø—Ä–æ —Ä–µ–±–µ–Ω–∫–∞, —Ç–µ–º –ª—É—á—à–µ —Å–∫–∞–∑–∫–∞\n"
        "‚Ä¢ –°–∫–∞–∑–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç (2-8 –ª–µ—Ç)\n"
        "‚Ä¢ –ö–∞–∂–¥–∞—è –∏—Å—Ç–æ—Ä–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–∞ –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–∞\n\n"
        "‚ùì –í–æ–ø—Ä–æ—Å—ã? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ!"
    )
    
    await message.answer(help_text)


@router.message(Command("story"))
async def story_handler(
    message: Message,
    session: AsyncSession,
    current_user: User,
    state: FSMContext
):
    """Handle /story command"""
    
    child_service = ChildService(session)
    children = await child_service.get_user_children(current_user.id)
    
    if not children:
        # No children - show add child button
        keyboard = get_children_keyboard([])  # Empty list shows "Add child" button
        await message.answer(
            "üë∂ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–µ—Ç–µ–π.\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å:",
            reply_markup=keyboard
        )
    else:
        # Show children selection
        keyboard = get_children_keyboard(children)
        await message.answer(
            f"üë∂ –£ –≤–∞—Å {len(children)} –ø—Ä–æ—Ñ–∏–ª{'—å' if len(children) == 1 else ('—è' if len(children) < 5 else '–µ–π')}.\n\n"
            "–î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞–µ–º —Å–∫–∞–∑–∫—É?",
            reply_markup=keyboard
        )


@router.message(Command("profile"))
async def profile_handler(
    message: Message,
    session: AsyncSession,
    current_user: User
):
    """Handle /profile command - enhanced version"""
    
    child_service = ChildService(session)
    children = await child_service.get_user_children(current_user.id)
    
    if not children:
        await message.answer(
            "üë∂ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–µ—Ç–µ–π.\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /story!",
            reply_markup=get_children_keyboard([])
        )
        return
    
    # Show enhanced profile management interface
    keyboard = get_profile_management_keyboard(children)
    
    await message.answer(
        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –¥–µ—Ç–µ–π**\n\n"
        f"–£ –≤–∞—Å {len(children)} –ø—Ä–æ—Ñ–∏–ª{'—å' if len(children) == 1 else ('—è' if len(children) < 5 else '–µ–π')}.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.callback_query(F.data == "menu_create_story")
async def menu_create_story_handler(
    callback: CallbackQuery,
    session: AsyncSession,
    current_user: User
):
    """Handle create story menu button"""
    child_service = ChildService(session)
    children = await child_service.get_user_children(current_user.id)
    
    if not children:
        keyboard = get_children_keyboard([])
        await callback.message.edit_text(
            "üë∂ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–µ—Ç–µ–π.\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å:",
            reply_markup=keyboard
        )
    else:
        keyboard = get_children_keyboard(children)
        await callback.message.edit_text(
            f"üë∂ –£ –≤–∞—Å {len(children)} –ø—Ä–æ—Ñ–∏–ª{'—å' if len(children) == 1 else ('—è' if len(children) < 5 else '–µ–π')}.\n\n"
            "–î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞–µ–º —Å–∫–∞–∑–∫—É?",
            reply_markup=keyboard
        )
    
    await callback.answer()


@router.callback_query(F.data == "menu_manage_profiles")
async def menu_manage_profiles_handler(
    callback: CallbackQuery,
    session: AsyncSession,
    current_user: User
):
    """Handle manage profiles menu button"""
    child_service = ChildService(session)
    children = await child_service.get_user_children(current_user.id)
    
    if not children:
        await callback.message.edit_text(
            "üë∂ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–µ—Ç–µ–π.\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /story!",
            reply_markup=get_children_keyboard([])
        )
    else:
        keyboard = get_profile_management_keyboard(children)
        await callback.message.edit_text(
            "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –¥–µ—Ç–µ–π**\n\n"
            f"–£ –≤–∞—Å {len(children)} –ø—Ä–æ—Ñ–∏–ª{'—å' if len(children) == 1 else ('—è' if len(children) < 5 else '–µ–π')}.\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=keyboard
        )
    
    await callback.answer()


@router.callback_query(F.data == "menu_story_history")
async def menu_story_history_handler(
    callback: CallbackQuery,
    session: AsyncSession,
    current_user: User
):
    """Handle story history menu button"""
    # TODO: Implement story history functionality
    await callback.message.edit_text(
        "üìö **–ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞–∑–æ–∫**\n\n"
        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
        "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–∫–∞–∑–æ–∫! üìñ‚ú®",
        reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "menu_help")
async def menu_help_handler(callback: CallbackQuery):
    """Handle help menu button"""
    help_text = (
        "üÜò **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É**\n\n"
        "üìñ **–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–∫–∞–∑–∫—É:**\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å —Å–∫–∞–∑–∫—É'\n"
        "2. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ —Å–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞\n"
        "3. –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–∏–º—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π\n"
        "4. –ñ–¥–∏—Ç–µ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞! ‚ú®\n\n"
        "üí° **–°–æ–≤–µ—Ç—ã:**\n"
        "‚Ä¢ –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ –ø—Ä–æ —Ä–µ–±–µ–Ω–∫–∞, —Ç–µ–º –ª—É—á—à–µ —Å–∫–∞–∑–∫–∞\n"
        "‚Ä¢ –°–∫–∞–∑–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç (2-8 –ª–µ—Ç)\n"
        "‚Ä¢ –ö–∞–∂–¥–∞—è –∏—Å—Ç–æ—Ä–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–∞ –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–∞\n\n"
        "‚ùì **–í–æ–ø—Ä–æ—Å—ã?** –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ!"
    )
    
    await callback.message.edit_text(
        help_text,
        reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "main_menu")
async def main_menu_handler(
    callback: CallbackQuery,
    session: AsyncSession,
    current_user: User
):
    """Handle main menu callback"""
    user_name = current_user.first_name
    user_stats = f"(ID: {current_user.id}, –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–∫–∞–∑–æ–∫: {3 - current_user.free_stories_used}/3)"
    
    welcome_text = (
        f"üé≠ –ü—Ä–∏–≤–µ—Ç, {user_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Å–∫–∞–∑–æ–∫!\n\n"
        "–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∫–∞–∑–æ—á–Ω–∏–∫! ‚ú®\n\n"
        "üìö –ß—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∫–∞–∑–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–≤–æ–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞\n"
        "‚Ä¢ –î–µ–ª–∞—Ç—å –µ–≥–æ –≥–ª–∞–≤–Ω—ã–º –≥–µ—Ä–æ–µ–º –∫–∞–∂–¥–æ–π –∏—Å—Ç–æ—Ä–∏–∏\n"
        "‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∞–∑–∫–∏ –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã\n"
        "‚Ä¢ –ó–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ—Ä–∏–∏\n\n"
        f"üë§ {user_stats}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    
    keyboard = get_main_menu_keyboard()
    await callback.message.edit_text(welcome_text, reply_markup=keyboard)
    await callback.answer()


# Echo handler temporarily disabled to allow FSM states to work
# @router.message()
# async def echo_handler(message: Message):
#     """Handle all other messages"""
#     
#     echo_text = (
#         f"üëã –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n"
#         f"–ü–æ–∫–∞ —á—Ç–æ —è —É—á—É—Å—å –±—ã—Ç—å –ª—É—á—à–∏–º —Å–∫–∞–∑–æ—á–Ω–∏–∫–æ–º. üìö\n\n"
#         f"–ü–æ–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—ã:\n"
#         f"/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
#         f"/help - –ø–æ–º–æ—â—å\n"
#         f"/story - —Å–æ–∑–¥–∞—Ç—å —Å–∫–∞–∑–∫—É\n\n"
#         f"–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´{message.text}¬ª"
#     )
#     
#     await message.answer(echo_text)
